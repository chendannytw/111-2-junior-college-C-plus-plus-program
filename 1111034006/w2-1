#include <stdio.h>
#define SIZE 4
#define stu 13

void sort(char *name[13],int a[][SIZE], int size,int (*compare)(int a, int b));
void swap(int *e1Ptr,int*e2Ptr);
int avg(int y, int z);
int middle(int a[][SIZE],int low,int high);
int ascending(int a, int b);
int descending(int a, int b);

int main(void)
{
    int i,j;
    int a[13][SIZE] = {{2,98,72,0},
					   {3,76,32,0},
					   {6,98,67,0},
					   {7,89,32,0},
					   {8,98,55,0},
					   {9,89,32,0},
					   {10,98,65,0},
					   {11,99,32,0},
				       {12,98,71,0},
					   {13,76,91,0},
					   {14,88,91,0},
					   {15,76,45,0},
					   {16,99,91,0}};
					   				   
	char *name[13] = {"one","two","three","four","five","six","seven","eight","nine","ten","a","b","c"};
	
    puts("Data items in original order");
    for(j=0;j<13;j++)
    { 
		//for (i = 1; i <= 2; ++i) 
		//{
        //	a[j][3]+=a[j][i];
        //}
        a[j][3]=avg(a[j][1],a[j][2]);
	}
	
   
    for(j=0;j<13;j++)
    {
    	printf("%8s",name[j]);
		for (i = 0; i < SIZE; ++i) 
		{
			printf("%4d", a[j][i]);
    	}
    	printf("\n");
	}
	
	
	printf("%s", "Enter 1 to sort in ascending order,\n" 
          "Enter 2 to sort in descending order: ");
    int order; // 1 for ascending order or 2 for descending order
    scanf("%d", &order);
	if (order == 1) {
      sort(name,a, stu, ascending);
      puts("\nData items in ascending order");
    }  
    else { 
      sort(name,a, stu, descending);
      puts("\nData items in descending order");
    }
    
    for(j=0;j<13;j++){
		printf("%8s",name[j]);
		for (i = 0; i < SIZE; ++i) 
		{
        	printf("%4d", a[j][i]);  
    	}
    	
    	//printf("%4d",avg(a[j][3]));
    	
        if (order == 1) {
           printf("%4d",j+1);
        } 
        else { 
           printf("%4d",13-j); 
        }
	 
        printf("\n");	
	}
	//printf("%s%4d","最小值",a[0][3]);
	//printf("\n%s%4d","最大值",a[9][3]);
	//printf("\n%s%4d","中位數",middle(a,0,9));
	
	printf("%s\n","不及格:");
	for(i=0;i<13;i++){
		if(a[i][3]<60){
			printf("%s\n",name[i]);
		}
	}
	

}


void sort(char *name[13],int a[][SIZE], int size,int (*compare)(int a, int b))
{
    int hold,pass,i;
    char *ptr;
    for (pass = 1; pass < size; ++pass) {
        for (i = 0; i < size - pass; ++i) {        
            if ((*compare)(a[i][3], a[i + 1][3])) {
            ptr = name[i];
            name[i] = name[i+1];
            name[i+1] = ptr;

                swap(&a[i][0], &a[i+1][0]);
                swap(&a[i][1], &a[i+1][1]);
                swap(&a[i][2], &a[i+1][2]);
                swap(&a[i][3], &a[i+1][3]);
                //swap(&a[i][4], &a[i+1][4]);
            }
        }
    }

}

void swap(int *e1Ptr,int *e2Ptr)
{
	int hold;
	hold=*e1Ptr;
	*e1Ptr=*e2Ptr;
	*e2Ptr=hold;
}

int avg(int y, int z){
	int x;
   	x=(y+z)/2;
   	return x;
}

int middle(int a[][SIZE],int low,int high){
	int mid;
	mid = (low+high) / 2;
	mid = (a[mid][3]+a[mid+1][3])/2;
	return mid;
}

int ascending(int a, int b)                                  
{                                                              
   return a > b;       
}
                                               
int descending(int a, int b)                                 
{                                                              
   return a < b;     
}
