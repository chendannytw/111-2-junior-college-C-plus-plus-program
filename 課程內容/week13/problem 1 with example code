利用「建構子」與「解構子」建立一個寵物類別，建構子參數包含寵物姓名與年齡，判斷年齡正確性，並且將此類別分別設置成:

(1) 介面檔pet.h(抽離出實作內容的類別檔案)

(2) 實作檔pet_source.cpp 包含“get”、“set” functions(成員函數的執行方式，p.s.要判斷狗名字和年齡是否>20的合理性) ，須透過“get”function 詢問是否為主人，按Y則印出寵物的姓名與年齡，類別內容(實作檔)的petset.cpp。
(3) 主程式檔 source.cpp







//缺少輸入寵物年齡的功能
// Define class GradeBook that contains a courseName data member
// and member functions to set and get its value; 
// Create and manipulate a GradeBook object with these functions.
#include <iostream>
#include <string> // program uses C++ standard string class
using namespace std;

// GradeBook class definition
class Pet
{
public:
    // function that sets the course name
    void setPetName(string name, int age)
    {
        PetName = name; // store the course name in the object
        PetAge = age;
    } // end function setCourseName

    // function that gets the course name
    string getPetName() const
    {
        return PetName; // return the object's courseName  //私有資料成員courseName可以透過自家的函數存取
    } // end function getCourseName

    int getPetAge() const
    {
        return PetAge; // return the object's courseName  //私有資料成員courseName可以透過自家的函數存取
    } // end function getCourseName

    // function that displays a welcome message
    void displayMessage() const
    {
        // this statement calls getCourseName to get the 
        // name of the course this GradeBook represents
        cout << "My pet name is:" << getPetName() << "!";
        cout << "My pet age is:" << getPetAge() << "!"
            << endl;
    } // end function displayMessage
private:
    string PetName="unknown"; // course name for this GradeBook
    int PetAge=0;
}; // end class GradeBook  

// function main begins program execution
int main()
{
    string nameOfPet; // string of characters to store the course name
    Pet myPet; // create a GradeBook object named myGradeBook
    int ageOfPet;
    // display initial value of courseName
    cout << "Initial Pat name is: " << myPet.getPetName()
        << endl;

    // prompt for, input and set course name
    cout << "\nPlease enter the pet name:" << endl;
    getline(cin, nameOfPet); // read a course name with blanks
    myPet.setPetName(nameOfPet,10); // set the course name
    
    cout << endl; // outputs a blank line
    myPet.displayMessage(); // display message with new course name
} // end main
