// Fig. 3.5: fig03_05.cpp
// Define class GradeBook that contains a courseName data member
// and member functions to set and get its value; 
// Create and manipulate a GradeBook object with these functions.
#include <iostream>
#include <string> // program uses C++ standard string class
using namespace std;

// GradeBook class definition
class Pet
{
public:
    // function that sets the course name
    void setPetName_and_Age(string name,int age)
    {
        PetName = name; // store the course name in the object
        if ((age > 20) || (age < 0))
        {
            cout << "wrong dog age" << endl;
        }
        else
          PetAge = age;
    } // end function setCourseName

    // function that gets the course name
    string getPetName() const
    {
        return PetName; // return the object's courseName
    } // end function getCourseName

    // function that displays a welcome message

    int getPetAge() const
    {
        return PetAge; // return the object's courseName
    } // end function getCourseName

    // function that displays a welcome message
    void displayMessage() const
    {
        // this statement calls getCourseName to get the 
        // name of the course this GradeBook represents
        cout << "My pet's name is\n" << getPetName() << "!"
            << endl;

        cout << "My pet's age is\n" << getPetAge() << "!"
            << endl;
    } // end function displayMessage
private:
    string PetName="unknown dog name"; // course name for this GradeBook
    int PetAge=0;
}; // end class GradeBook  

// function main begins program execution
int main()
{
    string dogname; // string of characters to store the course name
    int dogage;
    Pet mypet; // create a GradeBook object named myGradeBook

    // display initial value of courseName
    cout << "Initial dog name is: " << mypet.getPetName()
        << endl;

    cout << "Initial dog age is: " << mypet.getPetAge()
        << endl;

    // prompt for, input and set course name
    cout << "\nPlease enter the dog's name:" << endl;
    getline(cin, dogname); // read a course name with blanks
    cout << "\nPlease enter the dog's age:" << endl;
    cin >> dogage;
    mypet.setPetName_and_Age(dogname,dogage); // set the course name

    cout << endl; // outputs a blank line
    mypet.displayMessage(); // display message with new course name
} // end main
